README

===============
TARGETS
===============

gzip_all contains a Makefile that generates various targets with
cryptic names:

gzip_u:   (u)nmodified gzip, statically linked against an unmodified
          zlib (libz_u/).

gzip_a:   C(a)psicum-sandboxed gzip, statically linked against an
          unmodified zlib and libsep, a small RPC library that has
          been modified to emulate the old libcapsicum API.

gzip_h:   libc(h)eri-sandboxed gzip, statically linked against
          libcheri, and depends on gzsandbox-helper_h.bin at runtime.

gzip_u_libz_h:  unmodified gzip, statically linked against libcheri
                and libzwrapper, a small wrapper around the
                libcheri-sandboxed zlib (libz_h2/), and depends on
                lzsandbox-helper_h.bin at runtime.

Each target is always statically linked against any helpers.

The libcheri-sandboxed stuff always depends on libcheri on the caller
(ambient) side and libc_cheri on the callee (sandboxed) side.

In gzip_all, the different cases are generated by use of the C
preprocessor. In the zlib cases, there are two directories:

libz_u:   (u)nmodified zlib.

libz_h2:  libc(h)eri-sandboxed zlib, along with helper and wrapper.

libz_all: ongoing effort to unify these two implementations and make
          it easier to add new cases. Probably libz_u will be replaced
          with this one, libz_a (Capsicum-sandboxed zlib) added, and
          libz_h2 left alone for now (because it contains too many
          changes to make this unification practical).

===============
BUILDING
===============

It should be sufficient to modify only cheridefs.mk to point to the
CHERI SDK built using build_sdk.sh.

The gzip_all Makefile does everything: cleaning and building the
various library dependencies (libz, libsep, libcheri, libc_cheri),
and pushing the files to a CHERI box using the $(CHERI_PUSH) command.

